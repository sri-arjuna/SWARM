#!/usr/bin/env bash
#
# Prepare language handling
#
	swarm.lang.list() { #
	# Lists all supported languages
	#
		$LS -1 "$SWARM_DIR_LANG"
	}
	swarm.lang.count() { #
	# Lists all supported languages
	#
		local lang_list=$(swarm.lang.list)
		local tmp_counter=($lang_list)
		local lang_count=$( $ECHO ${#tmp_counter[@]} )
		$ECHO $lang_count
	}
	swarm.update.lang() { # en_GB
	# Updates the current language with passed lang_code
	# Automaticly checks for all available langs otherwise.
		swarm.protect "$FUNCNAME" "${@}" && exit 1
		# Use passed language or try to auto-detect
		local lang_wish=${1:-${LANG/.*}}
		local lang_short=${lang_wish/_*}

		if [[ -d "$SWARM_DIR_LANG/$lang_wish" ]]
		then	# Desired language exists
				# Load all language files
				source "$SWARM_DIR_LANG/$lang_wish"/*
		else	# Passed language or auto detection didnt work
				# Check for 'similar ones'
				lang_options=$($ECHO $(swarm.lang.list) | $GREP $lang_short)
				if [[ -z $lang_options ]]
				then	# No no options found
						if [[ $(swarm.lang.count) -gt 1 ]]
						then	# More than language has been found
								select lang_wish in $(swarm.lang.list);do break;done
								SWARM[LANG]=$lang_wish
						else	# Only english is available
								SWARM[LANG]=en_GB
						fi
						# Load the selected language files
						source "$SWARM_DIR_LANG/${SWARM[LANG]}/core.conf"
						source "$SWARM_DIR_LANG/${SWARM[LANG]}/help.conf"
						source "$SWARM_DIR_LANG/${SWARM[LANG]}/manpage.conf"
				fi
		fi
		# Export all messages
		export ${!SWARM_MSG_*}
	}
	swarm.update.lang.status() { #
	# Updates the language specific part
	# for the status function
		#
		#	Return values
		#
			# RET_VALUE's are in coherence with status,
			# so you can always use them to pass them to it.
			#RET_DONE=0
			 STATUS_TEXT[$RET_DONE]="${SWARM_MSG_STATUS_DONE}"

			#RET_FAIL=1
			 STATUS_TEXT[$RET_FAIL]="${SWARM_MSG_STATUS_FAIL}"

			#RET_WORK=2
			 STATUS_TEXT[$RET_WORK]="${SWARM_MSG_STATUS_WORK}"

			#RET_TODO=3
			 STATUS_TEXT[$RET_TODO]="${SWARM_MSG_STATUS_TODO}"

			#RET_SKIP=4
			 STATUS_TEXT[$RET_SKIP]="${SWARM_MSG_STATUS_SKIP}"

			#RET_NEXT=5
			 STATUS_TEXT[$RET_NEXT]="${SWARM_MSG_STATUS_NEXT}"

			#RET_BACK=6
			 STATUS_TEXT[$RET_BACK]="${SWARM_MSG_STATUS_BACK}"

			#RET_CANC=7
			 STATUS_TEXT[$RET_CANC]="${SWARM_MSG_STATUS_ERROR}"

			#RET_ON=10
			 STATUS_TEXT[$RET_ON]="${SWARM_MSG_STATUS_ON}"

			#RET_OFF=11
			 STATUS_TEXT[$RET_OFF]="${SWARM_MSG_STATUS_OFF}"

			#RET_HELP=99
			 STATUS_TEXT[$RET_HELP]="${SWARM_MSG_STATUS_HELP}"

			#RET_INFO=111
			 STATUS_TEXT[$RET_INFO]="${SWARM_MSG_STATUS_INFO}"

			#RET_NFOUND=127
			 STATUS_TEXT[$RET_NFOUND]="${SWARM_MSG_STATUS_NFOUND}"

			#RET_CANC=130
			 STATUS_TEXT[$RET_CANC]="${SWARM_MSG_STATUS_CANC}"

			export ${STATUS_TEXT[@]}
	}
