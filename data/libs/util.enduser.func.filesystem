#!/usr/bin/env bash
swarm.fs.get_waiting() { # KILOBYTES
# Returns the amount of seconds to wait
#
	[[ -z "$1" ]] && builtin echo 0.3 && return
	if [[ $1 -lt 1000100 ]]
	then	# Its less than 1 mb
		waiting=0.1
	elif [[ $1 -lt 100100100 ]]
	then	# Its less than 100 mb
		waiting=0.3
	elif [[ $1 -lt 1000100100 ]]
	then	# Its less than 1 gb
		waiting=0.4
	elif [[ $1 -lt 10100100100 ]]
	then	# Its less than 10 gb
		waiting=0.5
	else	# for everything higher
		waiting=0.9
	fi
	builtin echo $waiting
}
swarm.util.cp() { # [-f -l -q -t TARGET] SOURCE [TARGET]
# Copies SOURCE to TARGET
# Returns 1 if TARGET-dir does not exist
	[[ -z "${@}" ]] && swarm.help.usage "$FUNCNAME" && return 1
	#local force_Overwrite=false
	local show_Longnames=false
	local cp_target=""
	local beVerbose=true
	local optargs=""
# Catch arguments
	for opt in "${@}"
	do	case "${opt}" in
		"-f") 	#force_Overwrite=true
			optargs="-f"
			shift
			;;
		"-l")	show_Longnames=true ; shift	;;
		"-t")	cp_target="$2" ; shift 2	;;
		"-q")	beVerbose=false ; shift		;;
		"--")	# Do Pipe
			[[ -z "$cp_target" ]] && \
				swarm.help.manpage $FUNCNAME && \
				return 1
			while read line
			do
				\cp $optargs "$line" "$cp_target"
			done
			return 0
			;;
		*)	[[ "-" = "${opt:0:1}" ]] && \
				optargs+=" $opt" && shift	;;
		esac
	done
# Make sure target is set
	local ARGS=("${@}")
	# If TARGET was not passed as option,
	# take last argument for it
	if [[ -z "$cp_target" ]]
	then
		local tID=$(( ${#ARGS[@]} - 1 ))
		cp_target="${ARGS[$tID]}"
		unset ARGS[$tID]
	fi
# Preparations
	local MAX="${#ARGS[@]}"
	local COUNT=0
	#[[ -d "$cp_target" ]] || [[ -f "$cp_target" ]]

# Action
	if $beVerbose
	then	# Show each file on its own line
		for src in "${ARGS[@]}"
		do
			$show_Longnames && src_show="$src" || src_show="${src##*/}"
			bar -m $MAX -c $COUNT "$SWARM_MSG_WORD_COPYING : $src"
			\cp $optargs "$src" "$cp_target"
			#$PRINTF "$POS_END\n"
			status -c $? "$SWARM_MSG_WORD_COPIED $SWARM_MSG_WORD_FILE: $cp_target"
			COUNT=$(( $COUNT + 1 ))
		done
	else	# Show all in one line;
		bar "$SWARM_MSG_WORD_COPYING $SWARM_MSG_WORD_FILES"
		\cp $optargs "${ARGS[@]}" "$cp_target"
		#$PRINTF "$POS_END\n"
		status $? "$SWARM_MSG_WORD_COPIED $MAX $SWARM_MSG_WORD_FILES"
	fi
}
