#/usr/bin/env bash
#
# Usage Handler
#
	swarm.help.usage() { # FUNCNAME
	# Returns the 'usage help screen' according to passed FUNCNAME
	#
		swarm.protect "$FUNCNAME" "${@}" && exit 1
		local out=""
	# Parse argument
		case "$1" in
		"cfg.list")
			out="$SWARM_MSG_CFG_LIST_USAGE"
			;;
		"cfg.get")
			out="$SWARM_MSG_CFG_GET_USAGE"
			;;
		"cfg.set")
			out="$SWARM_MSG_CFG_SET_USAGE"
			;;
		"status")
			out="$SWARM_MSG_STATUS_USAGE"
			;;
		"printe")
			out="$SWARM_MSG_PRINTE_USAGE"
			;;
		"printl")
			out="$SWARM_MSG_PRINTL_USAGE"
			;;
		"header")
			out="$SWARM_MSG_HEADER_USAGE"
			;;
		"title")
			out="$SWARM_MSG_TITLE_USAGE"
			;;
		"yesno")
			out="$SWARM_MSG_YESNO_USAGE"
			;;
		"pick")
			out="$SWARM_MSG_PICK_USAGE"
			;;
		"printlist")
			out="$SWARM_MSG_PRINTLIST_USAGE"
			;;
		"ask")
			out="$SWARM_MSG_ASK_USAGE"
			;;
		"isDir" | "swarm.util.isDir")
			out="$SWARM_MSG_ISDIR_USAGE"
			;;
		"isRoot" | "swarm.util.isRoot")
			out="$SWARM_MSG_ISROOT_USAGE"
			;;
		"isGUI" | "swarm.util.isGUI")
			out="$SWARM_MSG_ISGUI_USAGE"
			;;
		"press")
			out="$SWARM_MSG_PRESS_USAGE"
			;;
		"DISTRO" | "swarm.os.distro" )
			out="$SWARM_MSG_DISTRO_USAGE"
			;;
		"DESKTOP" | "swarm.os.desktop")
			out="$SWARM_MSG_DESKTOP_USAGE"
			;;
		"BASED" | "swarm.os.based")
			out="$SWARM_MSG_BASED_USAGE"
			;;
		"swarm.util.tar" | "TAR")
			out="$SWARM_MSG_TAR_USAGE"
			;;
		"swarm.cleanup")
			out="$SWARM_MSG_CLEANUP_USAGE"
			;;
		"swarm.color.bg")
			out="$SWARM_MSG_COLOR_BG_USAGE"
			;;
		"swarm.color.fg")
			out="$SWARM_MSG_COLOR_FG_USAGE"
			;;
		"swarm.color.list")
			out="$SWARM_MSG_COLOR_LIST_USAGE"
			;;
		"swarm.help.usage")
			out="$SWARM_MSG_HELP_USAGE"
			;;
		"swarm.help.manpage")
			out="$SWARM_MSG_MANPAGE_USAGE"
			;;
		"swarm.print.bold")
			out="$SWARM_MSG_PRINT_BOLD_USAGE"
			;;
		"swarm.print.border")
			out="$SWARM_MSG_PRINT_BORDER_USAGE"
			;;
		"swarm.print.goto")
			out="$SWARM_MSG_PRINT_GOTO_USAGE"
			;;
		"swarm.print.text")
			out="$SWARM_MSG_PRINT_TEXT_USAGE"
			;;
		"swarm.print.underline")
			out="$SWARM_MSG_PRINT_UNDERLINE_USAGE"
			;;
		"swarm.protect")
			out="$SWARM_MSG_PROTECT_USAGE"
			;;
		"swarm.str.bool2str")
			out="$SWARM_MSG_STR_BOOL2STR_USAGE"
			;;
		"swarm.str.num2char")
			out="$SWARM_MSG_STR_NUM2CHAR_USAGE"
			;;
		"swarm.str.num2roman")
			out="$SWARM_MSG_STR_NUM2ROMAN_USAGE"
			;;
		"swarm.str.status")
			out="$SWARM_MSG_STR_STATUS_USAGE"
			;;
		"swarm.util.echo")
			out="$SWARM_MSG_ECHO_USAGE"
			;;
		"swarm.util.which")
			out="$SWARM_MSG_WHICH_USAGE"
			;;
		"filemgr")
			out="$SWARM_MSG_FILEMGR_USAGE"
			;;
		"edit")
			out="$SWARM_MSG_EDIT_USAGE"
			;;
		"web")
			out="$SWARM_MSG_WEB_USAGE"
			;;
		"rnd")
			out="$SWARM_MSG_RND_USAGE"
			;;
		"wait")
			out="$SWARM_MSG_WAIT_USAGE"
			;;
		"swarm.str.genfilename")
			out="$SWARM_MSG_STR_GENFILENAME_USAGE"
			;;
		"swarm.str.dirlist")
			out="$SWARM_MSG_STR_DIRLIST_USAGE"
			;;
		"swarm.str.dirsize")
			out="$SWARM_MSG_STR_DIRSIZE_USAGE"
			;;
		"swarm.str.filesize")
			out="$SWARM_MSG_STR_FILESIZE_USAGE"
			;;
		"swarm.str.num2ascii")
			out="$SWARM_MSG_STR_NUM2ASCII_USAGE"
			;;
		"swarm.str.ascii2num")
			out="$SWARM_MSG_STR_ASCII2NUM_USAGE"
			;;
		"swarm.util.cp")
			out="$SWARM_MSG_CP_USAGE"
			;;
		"swarm.util.mv")
			out="$SWARM_MSG_MV_USAGE"
			;;
		"download")
			out="$SWARM_MSG_DOWNLOAD_USAGE"
			;;
		"cfg.edit")
			out="$SWARM_MSG_CFG_EDIT_USAGE"
			;;
		"tar")
			out="$SWARM_MSG_TAR_USAGE"
			;;
		"bar")
			out="$SWARM_MSG_BAR_USAGE"
			;;
		"")
			out="$"
			;;
		"")
			out="$"
			;;
		"")
			out="$"
			;;
		"")
			out="$"
			;;
		"")
			out="$"
			;;
		*)	out="TODO: $1"
			;;
		esac
	# Output
		$PRINTF '%s\n' "$out" >&1
		unset out
	}
#
# Manpage handler
#
	swarm.help.manpage() { # FUNCNAME
	# Opens the manpage according to passed FUNCNAME
	#
		swarm.protect "$FUNCNAME" "${@}" && exit 1
		local tDir="$SWARM_DIR_LANG/${SWARM[LANG]}/man"
		if [[ -f "$1" ]]
		then	# Passed argument exists
			tManpage="$1"
		elif [[ -f "$tDir/${1}.1" ]]
		then	# default handling
			tManpage="$tDir/${1}.1"
		else	# Default error
			swarm.help.usage "$FUNCNAME"
			return 1
		fi
		man "$tManpage" || status $? "$SWARM_MSG_STR_FILE_NOT_FOUND" "$1"
	}
#
# Configuration handler
#
	swarm.eu.show.config() { #
	# Shows the configuration menu for SWARM
	#
		title "$SWARM_MSG_WORD_CONFIGURE : SWARM"

		while
			printe "$SWARM_MSG_PHRASE_SELECT_FILE"
			tFile=$(pick -m RC $($LS $SWARM_USER_DIR_CONF/))
		do
			# If the selected option is 'back' quit the Loop
			[[ "$SWARM_MSG_WORD_BACK" == "$tFile" ]] && break

			# Everything else should be a valid option (if not, pick is buggy)
			case "$tFile" in
			RC)	cfg.edit "$SWARMRC"
				;;
			*)	cfg.edit "$tFile"
				;;
			esac
		done
	}
