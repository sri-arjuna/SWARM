#!/bin/bash
#
# SWARM Core
#
	SWARM_MSG_PRINTE_USAGE="${SWARM_MSG_STR_USAGE}: printe [-1 -2 --] [str1 [,str2, [str3]]]"
	SWARM_MSG_PRINTL_USAGE="${SWARM_MSG_STR_USAGE}: printl [-1 -2] [str1 [,str2, [str3]]]"
	SWARM_MSG_PRINTLIST_USAGE="${SWARM_MSG_STR_USAGE}: printlist [-0 (for function: pick -m) -1 -2 -3 -a(lpha) -r(oman) -n(umeric)] \$LIST or \${ARRAY[@]}"
	SWARM_MSG_HEADER_USAGE="${SWARM_MSG_STR_USAGE}: header [--default] [str1 [,str2, [str3]]]"
	SWARM_MSG_TITLE_USAGE="${SWARM_MSG_STR_USAGE}: title [str]"
	SWARM_MSG_STATUS_USAGE="${SWARM_MSG_STR_USAGE}: status \$? [str1 [str2]]"
	SWARM_MSG_YESNO_USAGE="${SWARM_MSG_STR_USAGE}: yesno 'Question'"
	SWARM_MSG_PICK_USAGE="${SWARM_MSG_STR_USAGE}: pick [ -1 -2 -a(uto) -m(enu)] \$LIST or \${ARRAY[@]}"
	SWARM_MSG_ASK_USAGE="${SWARM_MSG_STR_USAGE}: ask 'Question'"
	SWARM_MSG_PRESS_USAGE="${SWARM_MSG_STR_USAGE}: press [-c(enter) -l(eft) -r(ight)] [str]"

#
# SWARM Specials
# Varname & function
#
	SWARM_MSG_ISDIR_USAGE="${SWARM_MSG_STR_USAGE}: swarm.util.isDir /path/of/dir"
	SWARM_MSG_ISGUI_USAGE="${SWARM_MSG_STR_USAGE}: swarm.util.isGUI" #: Returns TRUE if user ID is 0"
	SWARM_MSG_ISROOT_USAGE="${SWARM_MSG_STR_USAGE}: swarm.util.isRoot" # : Returns TRUE if XDG_CURRENT_DESKTOP, DESKTOP_SESSION or XAUTHORITY is set "
	SWARM_MSG_STR_BOOL2STR_USAGE="${SWARM_MSG_STR_USAGE}: swarm.str.bool2str [-C -c -d -y -o] \$?"
	SWARM_MSG_STR_NUM2CHAR_USAGE="${SWARM_MSG_STR_USAGE}: swarm.str.num2char NUM"
	SWARM_MSG_STR_NUM2ROMAN_USAGE="${SWARM_MSG_STR_USAGE}: swarm.str.num2roman NUM"
	SWARM_MSG_STR_STATUS_USAGE="${SWARM_MSG_STR_USAGE}: swarm.str.status \$? [str1] [str2]"
	SWARM_MSG_PRINT_UNDERLINE_USAGE="${SWARM_MSG_STR_USAGE}: swarm.print.underline STR"
	SWARM_MSG_PRINT_BOLD_USAGE="${SWARM_MSG_STR_USAGE}: swarm.print.bold STR"
	SWARM_MSG_PRINT_GOTO_USAGE="${SWARM_MSG_STR_USAGE}: swarm.print.goto NUM"
	SWARM_MSG_PRINT_BORDER_USAGE="${SWARM_MSG_STR_USAGE}: swarm.print.border [-h(eader) -t(itle)]"
	SWARM_MSG_PRINT_TEXT_USAGE="${SWARM_MSG_STR_USAGE}: swarm.print.text [-h(eader) -t(itle)] [str1] [str2] [str3]"
	SWARM_MSG_COLOR_LIST_USAGE="${SWARM_MSG_STR_USAGE}: swarm.color.list"
	SWARM_MSG_COLOR_BG_USAGE="${SWARM_MSG_STR_USAGE}: swarm.color.bg COLORNAME"
	SWARM_MSG_COLOR_FG_USAGE="${SWARM_MSG_STR_USAGE}: swarm.color.fg COLORNAME"
	#SWARM_MSG_ _USAGE="${SWARM_MSG_STR_USAGE}: swarm."
	#SWARM_MSG_ _USAGE="${SWARM_MSG_STR_USAGE}: swarm."
	#SWARM_MSG_ _USAGE="${SWARM_MSG_STR_USAGE}: swarm."


#
# SWARM Internals
#
	SWARM_MSG_CLEANUP_USAGE="${SWARM_MSG_STR_USAGE}: swarm.cleanup"
	SWARM_MSG_PROTECT_USAGE="${SWARM_MSG_STR_USAGE}: swarm.protect \$FUNCNAME \${@}"
	SWARM_MSG_USAGE_USAGE="${SWARM_MSG_STR_USAGE}: swarm.help.usage \$FUNCNAME"
	SWARM_MSG_MANPAGE_USAGE="${SWARM_MSG_STR_USAGE}: swarm.help.manpage \$FUNCNAME [| /path/to/file ]"
	SWARM_MSG_EU_HELPSCREEN_USAGE="${SWARM_MSG_STR_USAGE}: swarm.eu.help.screen"
	SWARM_MSG_EU_FUNCTIONLIST_USAGE="${SWARM_MSG_STR_USAGE}: swarm.eu.function.list [/path/to/file]"
	SWARM_MSG_EU_FUNCTIONSHOW_USAGE="${SWARM_MSG_STR_USAGE}: swarm.eu.function.show \$FUNCNAME"
	SWARM_MSG_EU_SHOW_ADVANCED_USAGE="${SWARM_MSG_STR_USAGE}: swarm.eu.show.advanced"
	SWARM_MSG_EU_SHOW_BASICS_USAGE="${SWARM_MSG_STR_USAGE}: swarm.eu.show.basics"
	SWARM_MSG_EU_SHOW_SUBMENU_USAGE="${SWARM_MSG_STR_USAGE}: swarm.eu.show.submenu \$FUNCNAME"
	#SWARM_MSG_EU _USAGE="${SWARM_MSG_STR_USAGE}: swarm.eu."
	#SWARM_MSG_SANITY_ _USAGE="${SWARM_MSG_STR_USAGE}: swarm."
	#SWARM_MSG_SANITY_ _USAGE="${SWARM_MSG_STR_USAGE}: swarm."
	#SWARM_MSG_SANITY_ _USAGE="${SWARM_MSG_STR_USAGE}: swarm."
#
# SWARM cfg.*
#
	SWARM_MSG_CFG_LIST_USAGE="${SWARM_MSG_STR_USAGE}: cfg.list /path/to/file"
	SWARM_MSG_CFG_GET_USAGE="${SWARM_MSG_STR_USAGE}: cfg.get /path/to/file VARNAME"
	SWARM_MSG_CFG_SET_USAGE="${SWARM_MSG_STR_USAGE}: cfg.set /path/to/file VARNAME VALUE"
#
# SWARM Wait
#
	SWARM_MSG_WAIT_USAGE="Please use either (s)econds, (m)inutes, or (h)ours"
#
# Strings that do NOT need to be translated
#
	SWARM_MSG_DISTRO_USAGE="${SWARM_MSG_STR_USAGE}: \$(swarm.os.distro)"
	SWARM_MSG_DESKTOP_USAGE="${SWARM_MSG_STR_USAGE}: \$(swarm.os.desktop)"
	SWARM_MSG_BASED_USAGE="${SWARM_MSG_STR_USAGE}: \$(swarm.os.based)"
